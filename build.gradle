// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: 'maven-publish'

def githubProperties = new Properties()
githubProperties.load(new FileInputStream(rootProject.file("github.properties"))) //Set env variable GPR_USER & GPR_API_KEY if not adding a properties file

def getVersionName = { ->
    return "1.0" // Replace with version Name
}


def getArtificatId = { ->
    return "themes" // Replace with library name ID == nome da sua library
}


publishing {

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/maycon1038/LibraryThemes")
            credentials {
                username = githubProperties['gpr.usr'] ?: System.getenv("GPR_USER")
                password = githubProperties['gpr.key'] ?: System.getenv("GPR_API_KEY")
            }
        }
    }
/*
	publications {
		gpr(MavenPublication) {
			from(components.java)
		}
	}
*/

    publications {
        gpr(MavenPublication) {
            groupId 'com.msm' // Replace with group ID "nome do pacote da sua library " ex: br.com.msm.mylibrary == br.com.msm
            artifactId getArtificatId()
            version getVersionName()
            //caminho do diretorio da saida do arquvio .aar obs: no menu > gradle execute o build dentro da sua library
            artifact("$projectDir/themes/build/outputs/aar/${getArtificatId()}-release.aar")


        }
    }
}

buildscript {
    repositories {
        google()
        mavenCentral()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.0.2'
		classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
		maven { url 'https://jitpack.io' }
        maven { url  "https://dl.bintray.com/blazei/maven" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
